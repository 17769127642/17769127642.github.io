(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{289:function(t,i,e){"use strict";e.r(i),i.default=[{title:"html笔记",path:"/posts/html.html",strippedContent:' # 超文本标记语言    超文本标记语言（Hyper Text Markup Language），缩写为HTML，标准[通用标记语言](https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=68713543&ss_c=ssc.citiao.link)下的一个应用。HTML不是一种编程语言，而是一种标记语言 （markup language），是网页制作所必备的工具。“[超文本](https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=42705&ss_c=ssc.citiao.link)”就是指页面内可以包含图片、链接，甚至音乐、程序等非文字元素。    超文本标记语言(或超文本标签语言)的结构包括“头”部分和“主体”部分，其中“头”部提供关于网页的信息，“主体”部分提供网页的具体内容。    # html介绍    ```  <html>  <body>    <h1>我的第一个标题</h1>    <p>我的第一个段落。</p>    </body>  </html>  ```    # html标题    HTML 标题（Heading）是通过 <h1> - <h6> 等标签进行定义的。    ### 实例    ```  <h1>This is a heading</h1>  <h2>This is a heading</h2>  <h3>This is a heading</h3>  ```    # html元素语法    - HTML 元素以*开始标签*起始  - HTML 元素以*结束标签*终止  - *元素的内容*是开始标签与结束标签之间的内容  - 某些 HTML 元素具有*空内容（empty content）*  - 空元素*在开始标签中进行关闭*（以开始标签的结束而结束）  - 大多数 HTML 元素可拥有*属性*    # 语言标记    <html></html> 创建一个超文本标记语言文档。    （头）设置文档标题和其它在网页中不显示的信息，比如[direction](https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=9488969&ss_c=ssc.citiao.link)方向、[语言代码](https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=7819658&ss_c=ssc.citiao.link)Language Code（见实体定义!ENTITY % [i18n](https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=5249290&ss_c=ssc.citiao.link)）、指定字典中的元信息、等等。    文档中不能被该站点辨识的其它所有链接源的 URL（[统一资源定位器](https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=36652&ss_c=ssc.citiao.link)）    <LINK> 定义一个链接和源之间的相互关系，比如引用一个 层叠样式表（英文缩写： css）、做一个链接到一个脚本、为某文件做一个链接（可打印的版本）、文档特定的工具栏/菜单。    <script><\/script>脚本语句标签，比如引用一个 javascript脚本。    <body></body>文档体，文档的可见部分。    <title></title> 设置文档的标题。    当然，如果不使用以上基本框架结构，而直接使用在实体部分中出现的标记符，在 浏览器下也可以 [解释执行](https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=10576556&ss_c=ssc.citiao.link)。    内容描述    <h1></h1> 最大的标题（一号标题）    <pre></pre> 预先格式化文本 （英文全称： PRE formatted）    下划线（英文全称：[Underline](https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=168138139&ss_c=ssc.citiao.link)）    [黑体字](https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=7742246&ss_c=ssc.citiao.link) （英文全称：Bold）    <i></i> 斜体字 （英文全称：Italics）    ``[打字机](https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=513269&ss_c=ssc.citiao.link)风格的 字体    <cite></cite>引用，通常是斜体    <em></em> 强调文本（通常是斜体加黑体、英文全称： **EM** *phasize*）    <strong></strong> 加重文本（通常是斜体加黑体）    <font size="" color=""></font> 设置字体大小从1到7，颜色使用名字或 RGB（中文全称：红绿蓝）的十六进制值    <BASEFONT></BASEFONT>基准字体标记    <big></big> 字体加大    <SMALL></SMALL> 字体缩小    <DELECT></DELECT> 加删除线    <CODE></CODE>程式码    < **KBD**></KBD>键盘字（英文全称： **K** *ey* **B** *oar* **D**）    <SAMP></SAMP> 范例（英文全称： **SAMP**le）    <VAR></VAR> 变量（英文全称：VARiable）    <BLOCKQUOTE></BLOCKQUOTE> 向右缩排（向右缩进、块引用）    [述语](https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=181508085&ss_c=ssc.citiao.link)定义（英文全称：DeFiNe）    <ADDRESS></ADDRESS>地址标记    <sup></SUP> 上标字 （英文全称：SUPerscript）    <SUB></SUB> 下标字（英文全称：SUBscript）    <xmp>...</xmp>；固定宽度 字体（在 文件中空白、换行、定位功能有效'},{title:"js笔记",path:"/posts/js.html",strippedContent:" # JavaScript 简介    JavaScript 诞生于 1995 年，主要是进行用户输入的合法性验证。  在 1995 年之前，Web 页面的一些验证工作都是由服务器端的语言来实现，这就要求用户输入的数据必须先通过网络传输到服务器端，服务器端进行相应的处理后，再将结果反馈给客户端    #  JavaScript 的概念和执行原理    JavaScript 是一种轻型的、解释性的脚本语言，是一种由浏览器内的解释器执行的程序语言  当客户端向服务器端请求页面时，服务器端将整个页面包含 JavaScript 的脚本代码发送到客户端，浏览器从上往下逐行读取并解析其中的 HTML 或脚本代码    # 函数的定义    函数就是为了完成程序中的某些特定功能而进行专门定义的一段程序代码。  函数包括自定义函数和系统函数  使用函数可以实现特定的功能，在使用函数前必须对函数进行定义，代码放置在 <script><\/script> 标签之间    # 函数的参数    函数参数作用：调用函数时将数据传递给被调函数的方式  JavaScript中函数参数的特殊性：  函数声明了参数，调用时也可以不传递参数，这在其他编程语言中是会出现编译错误的  不管函数声明时有多少个参数，调用函数时可以传递若干个参数值给函数，并且实际传递的参数值还可以在函数内部获得  在函数被调用时，一个 arguments 对象就会被创建，它只能使用在函数体中，以数组的形式来管理函数的实际参数    # JavaScript 的内部对象    JavaScript 提供了一些非常有用的内部对象，按使用方式可分为两种：  实例对象。在引用该对象的属性和方法时，必须先使用 new 关键字创建一个对象实例，然后再使用“对象实例名 . 成员”的格式来进行访问。  静态对象。在引用该对象的属性和方法时不需要使用 new 关键字来创建对象实例，可以直接使用“类名 . 成员”的格式来进行访问"},{title:"css笔记",path:"/posts/css.html",strippedContent:' # 插入图片    <img src="images/2.jpg" >    说明：src:表示图像的来源或路径    ../  表示返回上一级目录    ../img表示返回上一级目录中的img     # 插入超链接      <a href="images/2.jpg" target="_blank" >    ​    图片    </a>      <a href="images/2.jpg" target="_blank">         <img src="images/3.jpg" >     </a>         说明：href：表示跳转目标地址       target：新窗口的打开方式    _self:默认的，在原窗口打开    _blank:在新窗口打开    # 列表    \x3c!--无序列表  --\x3e    <ul>      <li>苹果</li>      <li>梨</li>    </ul>         \x3c!--有序列表  --\x3e    <ol>      <li>html</li>      <li>css</li>    </ol>    ## CSS的概念及作用    CSS概念：层叠样式表    CSS作用：精确控制网页中的元素（文字、图片、音视频，超链接等）位置，颜色，大小，布局等。    ## CSS的引用方式    方式1：行内样式:写在HTML的开始标签中，只对当前标签起作用    <p style="color:#249DF2; font-size: 50px; font-family:\'微软雅黑\' ;"></p>  说明：style:样式,color:文字颜色 font-size:文字大小，font-family:字体 ;    方式2：内嵌样式：在head标签中，当前页面中都可以用     <style>    ​    p{    ​    color:#249DF2;    ​    font-size: 30px;    ​    font-family:\'微软雅黑\' ;    ​    }      </style>    方式3：外链样式，写在外部css文件中，当前项目中的所有页面都可以用    先在项目文件夹中创建名为：css的子文件夹    【Ctrl+N】,【Ctrl+S】,命名为：style.css，保存在css文件夹中    # CSS修饰文字    ## 文字颜色    color:red       颜色名表示法    color:#f00;     十六进制表示法（0-9 a-f）web常用    Color:rgb(255,0,0);  rgb表示法    Color:rgba(255,0,0,1);rgba表示法,多设置透明度（0-1）    ## 文字字体     font-family: "微软雅黑";      ## 文字大小     font-size: 20px; 单位一般为px像素    ## 文字粗细     font-weight: bold;  //加粗     font-weight: normal;//去除加粗    ## 行高     line-height:1.5;  1.5倍行高，用于段落文字          line-height:20px; 固定行高，用于一行文字    ## 首行缩进     text-indent: 2em;      ## 文字对齐     text-align: center;  center 水平居中  left：居左  right:居右    ## 文本修饰    text-decoration:none;    去下划线    text-decoration:underline;  加下划线    text-decoration:line-through; 加删除线'},{title:"实训笔记",path:"/posts/%E6%96%B0%E5%BB%BA%E6%96%87%E6%9C%AC%E6%96%87%E6%A1%A3.html",strippedContent:' # 实训第一天        1.安装nodejs.2.安装typora.3.安装jquery.       4.注册github. 代码托管器       5学羽github菜鸟教程。![img](file:///C:\\Users\\hp\\AppData\\Local\\Temp\\%W@GJ$ACOF(TYDYECOKVDYB.png)https://www.runoob.com/ git/git -tutorial.html       注: I1.ctrl + /是査看源代码。2.保存文件后缀名カ.md。       3.代码符号输入后必须加空格。        # 实训第二天    1.安装Git。    (上传工具)  2.打开www.github.com，创建新的代码库，命名为：用户名+.github.io。  3.创建工作文件夹，在文件夹中右键打开Git Bash Hear，输入git clone+粘贴代码库地址。  4.在文件夹中创建index.html，并用记事本方式输入H5格式与内容。  5.右键打开Git Bash Hear。  6.输入git status    (粘贴本人地址)  7.输入git add .    (检查状态)  8.输入git commit -m"(注释)"     （提交版本库）  9.输入git push    (上传)  10.上传邮箱。  11.上传用户名。  12.复制新手教程。  13.输入账号密码。  14.刷新页面，出现上传文件。  15.复制    用户名+.github.io，打开新网页粘贴。    # 实训第三天    1.npm    (国外的下载)。  2.cnpm    (国内镜像)。  3.输入npm -v。  4.百度淘宝镜像，复制使用说明，粘贴至c盘根目录cmd。  5.等待下载，下载完成在cmd中输入cnpm -v。  6.输入cnpm install -g @vue/cli。  7.输入vue -V。  8.输入cnpm i -g vuepress。  9.百度vuepress官网学习。  10.建立工作文件夹，命名用英文。  11.创建README.md文件。  12.cmd命令打开文件夹。  13.输入vuepress dev .。  14.复制链接，打开浏览器。    # 实训第四天    1.创建文件夹，命名为vuepress。  2.右键打开Git Bash Hear。  3.百度liujiaozhu666.github.io。  4.点击页面最下方indigo material。  5.复制模板分支命令，粘贴至git。  6.运行init.sh。  7.后续运行在文件夹cmd中输入npm run dev。  8.复制链接百度打开。  9.修改方式：vue...->docs->.vuepress->config.js。  10.可修改项：title，description，author，email，github。'}]}}]);