(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{306:function(a,t,r){"use strict";r.r(t);var s=r(17),v=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"javascript-简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#javascript-简介"}},[a._v("#")]),a._v(" JavaScript 简介")]),a._v(" "),r("p",[a._v("JavaScript 诞生于 1995 年，主要是进行用户输入的合法性验证。\n在 1995 年之前，Web 页面的一些验证工作都是由服务器端的语言来实现，这就要求用户输入的数据必须先通过网络传输到服务器端，服务器端进行相应的处理后，再将结果反馈给客户端")]),a._v(" "),r("h1",{attrs:{id:"javascript-的概念和执行原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#javascript-的概念和执行原理"}},[a._v("#")]),a._v(" JavaScript 的概念和执行原理")]),a._v(" "),r("p",[a._v("JavaScript 是一种轻型的、解释性的脚本语言，是一种由浏览器内的解释器执行的程序语言\n当客户端向服务器端请求页面时，服务器端将整个页面包含 JavaScript 的脚本代码发送到客户端，浏览器从上往下逐行读取并解析其中的 HTML 或脚本代码")]),a._v(" "),r("h1",{attrs:{id:"函数的定义"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#函数的定义"}},[a._v("#")]),a._v(" 函数的定义")]),a._v(" "),r("p",[a._v("函数就是为了完成程序中的某些特定功能而进行专门定义的一段程序代码。\n函数包括自定义函数和系统函数\n使用函数可以实现特定的功能，在使用函数前必须对函数进行定义，代码放置在 "),r("script"),a._v(" 标签之间")]),a._v(" "),r("h1",{attrs:{id:"函数的参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#函数的参数"}},[a._v("#")]),a._v(" 函数的参数")]),a._v(" "),r("p",[a._v("函数参数作用：调用函数时将数据传递给被调函数的方式\nJavaScript中函数参数的特殊性：\n函数声明了参数，调用时也可以不传递参数，这在其他编程语言中是会出现编译错误的\n不管函数声明时有多少个参数，调用函数时可以传递若干个参数值给函数，并且实际传递的参数值还可以在函数内部获得\n在函数被调用时，一个 arguments 对象就会被创建，它只能使用在函数体中，以数组的形式来管理函数的实际参数")]),a._v(" "),r("h1",{attrs:{id:"javascript-的内部对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#javascript-的内部对象"}},[a._v("#")]),a._v(" JavaScript 的内部对象")]),a._v(" "),r("p",[a._v("JavaScript 提供了一些非常有用的内部对象，按使用方式可分为两种：\n实例对象。在引用该对象的属性和方法时，必须先使用 new 关键字创建一个对象实例，然后再使用“对象实例名 . 成员”的格式来进行访问。\n静态对象。在引用该对象的属性和方法时不需要使用 new 关键字来创建对象实例，可以直接使用“类名 . 成员”的格式来进行访问")])])}),[],!1,null,null,null);t.default=v.exports}}]);